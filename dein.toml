[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  set laststatus=2
  let g:lightline = {
    \ 'colorscheme': 'wombat'
    \ }
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  let g:NERDTreeShowBookmarks=1
  let g:NERDTreeShowHidden=1
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
  nnoremap <Space>n :<C-u>NERDTreeTabsToggle<CR>
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  let g:incsearch#auto_nohlsearch = 1
  map n  <Plug>(incsearch-nohl-n)
  map N  <Plug>(incsearch-nohl-N)
  map *  <Plug>(incsearch-nohl-*)
  map #  <Plug>(incsearch-nohl-#)
  map g* <Plug>(incsearch-nohl-g*)
  map g# <Plug>(incsearch-nohl-g#)
'''

[[plugins]]
repo = 'haya14busa/incsearch-easymotion.vim'

[[plugins]]
repo = 'haya14busa/incsearch-migemo.vim'
hook_add = '''
  function! s:config_migemo(...) abort
    return extend(copy({
    \   'converters': [
    \     incsearch#config#migemo#converter(),
    \   ],
    \   'modules': [incsearch#config#easymotion#module({'overwin': 1})],
    \   'keymap': {"\<C-l>": '<Over>(easymotion)'},
    \   'is_expr': 0,
    \ }), get(a:, 1, {}))
  endfunction

  noremap <silent><expr> / incsearch#go(<SID>config_migemo())
  noremap <silent><expr> ? incsearch#go(<SID>config_migemo({'command': '?'}))
  noremap <silent><expr> g/ incsearch#go(<SID>config_migemo({'is_stay': 1}))
'''

# language
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# colorscheme
[[plugins]]
repo = 'altercation/vim-colors-solarized'
